<h1 id="main-title">Eat-Da-Burger!</h1>

<div class="container">
    <div class="row">
        <div class="col-sm display-database">
            {{!-- Loop through each object in the array received from burgers_controller.js, and dynamically display un-eaten burgers on the screen. --}}
            {{!-- Uneaten burgers have a 'devoured' value of 0 (false). --}}
            <h2 class="database-title">Ready to devour!</h2>
            <ul>
                {{#each burgers}}
                {{#unless this.devoured}}
                <li>{{this.burger_name}} <button class="devour-it" data-id="{{this.id}} ">DEVOUR IT!</button></li>

                {{/unless}}
                {{/each}}
            </ul>
        </div>
        <div class="col-sm display-database">
            <h2 class="database-title">Devoured!</h2>
            {{!-- Loop through each object in the array received from burgers_controller.js, and dynamically display devoured burgers on the screen. --}}
            {{!-- Devoured burgers have a 'devoured' value of 1 (true). --}}
            <ul>
                {{#each burgers}}
                {{#if this.devoured}}
                <li>{{this.burger_name}} <button class="delete-it" data-id="{{this.id}} ">DELETE</button></li>
                {{/if}}
                {{/each}}
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            {{!-- Create a form that takes in a name for a new burger. The input is then processed in the script below. --}}
            <img class="center-block" src="/assets/img/main-image.png" alt="man eating burger" width="400">
            <h2 id="add-burger-title">What would you like to order?</h2>
            <form id="create-form">

                <div class="form-group">
                    <input type="text" id="burgername" name="name">
                </div>

                <button id="submit-btn" type="submit"><i class="fas fa-hamburger"></i> Order Up! <i
                        class="fas fa-hamburger"></i></button>
            </form>
        </div>
    </div>
</div>

</dic>

<script>
    // Form behavior on adding a new burger.
    // On form submit prevent default beahavior, create a burger object based on name provided by user, and POST the api/burgers route.
    // If post was successful, reload the page.
    document.getElementById("create-form").addEventListener("submit", function (event) {
        event.preventDefault()

        const newBurger = {
            burger_name: document.getElementById("burgername").value.trim(),
            devoured: false
        }

        fetch("/api/burgers", {
            method: "POST",
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(newBurger)
        }).then(response => {
            console.log(response)
            if (response.ok) location.reload()
        })
    })

    // Get reference to every DEVOUR IT! button on the screen.
    // Assign an event listener to every button that on click obtains the data-id number of the button clicked,
    // parses it into an object and sends the object to the api/burgers/id route via PATCH. Reload the page when done.
    document.querySelectorAll(".devour-it").forEach(button => {
        button.addEventListener("click", function () {
            const id = this.getAttribute("data-id")

            fetch(`/api/burgers/${id}`, {
                method: "PATCH",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: id })
            }).then(response => {
                console.log(response)
                if (response.ok) location.reload()
            })
        })
    })

    // Get reference to every DELETE button on the screen.
    // Assign an event listener to every button that on click obtains the data-id number of the button clicked,
    // parses it into an object and sends the object to the api/burgers/id route via DELETE. Reload the page when done.
    document.querySelectorAll(".delete-it").forEach(button => {
        button.addEventListener("click", function () {
            const id = this.getAttribute("data-id")

            fetch(`/api/burgers/${id}`, {
                method: "DELETE",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: id })
            }).then(response => {
                console.log(response)
                if (response.ok) location.reload()
            })
        })
    })

</script>